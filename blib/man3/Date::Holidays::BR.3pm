.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.30)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Date::Holidays::BR 3"
.TH Date::Holidays::BR 3 "2016-02-19" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Holidays::BR \- Determine Brazilian public holidays
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&  use Date::Holidays::BR;
\&  my ($year, $month, $day) = (localtime)[ 5, 4, 3 ];
\&  $year  += 1900;
\&  $month += 1;
\&  print "Woohoo" if is_br_holiday( $year, $month, $day );
\&
\&  my $h = br_holidays($year);
\&  printf "Jan. 1st is named \*(Aq%s\*(Aq\en", $h\->{\*(Aq0101\*(Aq};
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "new"
.IX Subsection "new"
Creates a new Date::Holidays::BR object.
.PP
.Vb 1
\&  my $mh = Date::Holidays::BR\->new();
.Ve
.SS "is_holiday"
.IX Subsection "is_holiday"
Should at least take three arguments:
.PP
year  (four digits)
month (between 1\-12)
day   (between 1\-31)
.PP
The return value from is_holiday is either a 1 or a 0 (1 if the
specified date is a holiday, 0 otherwise).
.PP
.Vb 3
\&  if ( $mh\->is_holiday( $year, $month, $day ) ) {
\&    # it\*(Aqs a holiday
\&  }
.Ve
.SS "is_br_holiday"
.IX Subsection "is_br_holiday"
Similar to is_holiday, but instead of returning 1 if the date is a
holiday returns a string comprising the name of the holidays. In the
event of two or more holidays on the same day (hey, it happens), the
string will comprise the name of all those holidays separated by a
semicolon.
.PP
.Vb 4
\&  my $todays_holiday = $mh\->is_br_holiday( $year, $month, $day );
\&  if ( $todays_holiday ) {
\&    print "Today is $todays_holiday.\enDon\*(Aqt bother getting up!\en";
\&  }
.Ve
.SS "holidays"
.IX Subsection "holidays"
Should take at least one argument:
.PP
year  (four digits)
.PP
Returns a reference to a hash, where the keys are date represented as
four digits, the two first representing month (01\-12) and the last two
representing day (01\-31).
.PP
The value for the key in question is the local name for the holiday
indicated by the day. In the event of two or more holidays on the same
day (yes, it happens!), the values will comprise the name of all those
holidays separated by a semicolon.
.PP
.Vb 5
\&  my $years_holidays = holidays( $year );
\&  for (keys %$years_holidays) {
\&    my ($day, $month) = /(..)(..)/;
\&    print "$day/$month \- $years_holidays\->$_\en";
\&  }
.Ve
.SH "NATIONAL HOLIDAYS"
.IX Header "NATIONAL HOLIDAYS"
The following Brazilian holidays have fixed dates:
.PP
.Vb 8
\&    Jan   1    Confraternização Universal
\&    Apr  21    Tiradentes
\&    May   1    Dia do Trabalho
\&    Sep   7    Independência do Brasil
\&    Oct  12    Nossa Senhora Aparecida
\&    Nov   2    Dia de Finados
\&    Nov  15    Proclamação da República
\&    Dec  25    Natal
.Ve
.PP
The following Brazilian holidays have mobile dates:
.PP
.Vb 1
\&    Sexta\-feira da Paixão (Friday before Páscoa / Easter)
.Ve
.SH "ABOUT BRAZILIAN HOLIDAYS"
.IX Header "ABOUT BRAZILIAN HOLIDAYS"
Being a large country, Brazil separates its holidays in national, state and 
municipal holidays. Law 9.093 of 1995 states as holidays:
.IP "\(bu" 4
the \fBfixed\fR dates above;
.IP "\(bu" 4
the \fIdata magna\fR of the State (State's most important date, as 
determined in that State's law);
.IP "\(bu" 4
the days beginning and ending the hundredth year of a city's 
foundation, as determined in that City's law);
.IP "\(bu" 4
religious holidays as determined by each City's law, no more than 4, and
already including \fISexta-feira da Paixão\fR.
.PP
Since that last item makes \fISexta-feira da Paixão\fR a holiday for every city 
in the Country, it was marked as a national holiday.
.PP
Páscoa (Easter) is celebrated, but since it always falls on a Sunday, there is 
no law declaring it as an actual Brazilian Holiday. If you feel it should be 
added or finds out I am mistaken, please let me know.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<Lei 10.607 de 2002>
.PP
<Lei 9.335 de 1996>
.PP
<Lei 9.093 de 1995>
.PP
<Lei 6.802 de 1980>
.PP
<Lei 662 de 1949>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Jonas B. Nielsen, for his work regarding the standardization of
Date::Holidays modules.
.PP
Jose Castro, as this module was taken nearly verbatim from 
Date::Duration::PT.
.SH "AUTHOR"
.IX Header "AUTHOR"
Breno G. de Oliveira, \f(CW\*(C`<garu@cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-date\-holidays\-br@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Breno G. de Oliveira, All Rights Reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 180:" 4
.IX Item "Around line 180:"
Non-ASCII character seen before =encoding in 'Confraternização'. Assuming \s-1UTF\-8\s0
